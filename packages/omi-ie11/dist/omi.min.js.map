{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/json-diff.js","../src/we-element.js","../src/render.js","../src/define.js","../src/options.js","../src/tag.js","../src/omi.js"],"names":["VNode","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","String","p","key","options","vnode","cssToDom","css","node","document","createElement","innerText","npn","str","replace","$","$1","toUpperCase","applyRef","ref","value","current","isArray","obj","Object","prototype","toString","call","nProps","props","result","keys","forEach","isSameNodeType","isNamedNode","hydrating","_componentConstructor","removeNode","name","isSvg","old","style","cssText","IS_NON_DIMENSIONAL","test","innerHTML","__html","useCapture","substring","addEventListener","eventProxy","e","removeAttribute","ns","removeAttributeNS","toLowerCase","setAttribute","className","isSvgMode","dom","context","mountAll","ret","idiff","componentRoot","diffLevel","out","nodeValue","createTextNode","parentNode","replaceChild","recollectNodeTree","vnodeName","createNode","t","vchildren","firstChild","fc","a","splitText","nextSibling","innerDiffNode","dangerouslySetInnerHTML","prevSvgMode","min","len","childrenLen","vlen","j","keyedLen","originalChildren","keyed","vchild","_child","_component","__key","trim","isHydrating","c","f","appendChild","unmountOnly","removeChildren","update","attrs","setAccessor","isWeElement","_possibleConstructorReturn","self","ReferenceError","HTMLElement","ARRAYTYPE","type","syncKeys","pre","_diff","rootPreType","currentValue","undefined","item","index","rootCurrentType","setResult","path","OBJECTTYPE","preValue","currentType","subKey","k","v","diff","execTask","deadline","list","timeRemaining","currentStore","tick","setTimeout","parent","querySelector","store","instances","JSON","parse","stringify","data","render","extendStoreUpate","this","diffResult","diff$1","originData","updateAll","globalData","instance","onChange","matchGlobalData","updateByPath","indexOf","keyA","includePath","updatePath","keyB","pathA","pathB","next","substr","origin","arr","split","ctor","define","pure","dataToPath","getUpdatePath","_objToPath","_arrayToPath","target","root","global","Math","Array","window","Reflect","customElements","hasOwnProperty","BuiltInHTMLElement","construct","constructor","setPrototypeOf","requestIdleCallback","cb","start","Date","now","didTimeout","max","cancelIdleCallback","id","clearTimeout","Promise","resolve","then","bind","_listeners","WeElement","_this","install","shadowRoot","attachShadow","mode","installed","disconnectedCallback","uninstall","splice","beforeUpdate","host","fire","afterUpdate","CustomEvent","detail","omi","tag","h","Omi","version","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from \"./vnode\";\nimport options from \"./options\";\n\nconst stack = [];\nconst EMPTY_CHILDREN = [];\n\nexport function h(nodeName, attributes) {\n\tlet children = EMPTY_CHILDREN,\n\t\tlastSimple,\n\t\tchild,\n\t\tsimple,\n\t\ti;\n\tfor (i = arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--; ) stack.push(child[i]);\n\t\t} else {\n\t\t\tif (typeof child === \"boolean\") child = null;\n\n\t\t\tif ((simple = typeof nodeName !== \"function\")) {\n\t\t\t\tif (child == null) child = \"\";\n\t\t\t\telse if (typeof child === \"number\") child = String(child);\n\t\t\t\telse if (typeof child !== \"string\") simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements v1. It sets new.target to the value of\n * this.constructor so that the native HTMLElement constructor can access the\n * current under-construction element's definition.\n */\n(function() {\n\tif (\n\t\t// No Reflect, no classes, no need for shim because native custom elements\n\t\t// require ES2015 classes or Reflect.\n\t\twindow.Reflect === undefined ||\n\t\twindow.customElements === undefined ||\n\t\t// The webcomponentsjs custom elements polyfill doesn't require\n\t\t// ES2015-compatible construction (`super()` or `Reflect.construct`).\n\t\twindow.customElements.hasOwnProperty(\"polyfillWrapFlushCallback\")\n\t) {\n\t\treturn;\n\t}\n\tconst BuiltInHTMLElement = HTMLElement;\n\twindow.HTMLElement = function HTMLElement() {\n\t\treturn Reflect.construct(BuiltInHTMLElement, [], this.constructor);\n\t};\n\tHTMLElement.prototype = BuiltInHTMLElement.prototype;\n\tHTMLElement.prototype.constructor = HTMLElement;\n\tObject.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n})();\n\n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback =\n\twindow.requestIdleCallback ||\n\tfunction(cb) {\n\t\treturn setTimeout(function() {\n\t\t\tvar start = Date.now();\n\t\t\tcb({\n\t\t\t\tdidTimeout: false,\n\t\t\t\ttimeRemaining: function() {\n\t\t\t\t\treturn Math.max(0, 50 - (Date.now() - start));\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1);\n\t};\n\nwindow.cancelIdleCallback =\n\twindow.cancelIdleCallback ||\n\tfunction(id) {\n\t\tclearTimeout(id);\n\t};\n\nexport function cssToDom(css) {\n\tconst node = document.createElement(\"style\");\n\tnode.innerText = css;\n\treturn node;\n}\n\nexport function npn(str) {\n\treturn str.replace(/-(\\w)/g, ($, $1) => {\n\t\treturn $1.toUpperCase();\n\t});\n}\n\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref != null) {\n\t\tif (typeof ref == \"function\") ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer =\n\ttypeof Promise == \"function\"\n\t\t? Promise.resolve().then.bind(Promise.resolve())\n\t\t: setTimeout;\n\nexport function isArray(obj) {\n\treturn Object.prototype.toString.call(obj) === \"[object Array]\";\n}\n\nexport function nProps(props) {\n\tif (!props || isArray(props)) return {};\n\tconst result = {};\n\tObject.keys(props).forEach(key => {\n\t\tresult[key] = props[key].value;\n\t});\n\treturn result;\n}\n","import { extend } from \"../util\";\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode === \"string\" || typeof vnode === \"number\") {\n\t\treturn node.splitText !== undefined;\n\t}\n\tif (typeof vnode.nodeName === \"string\") {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor === vnode.nodeName;\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn (\n\t\tnode.normalizedNodeName === nodeName ||\n\t\tnode.nodeName.toLowerCase() === nodeName.toLowerCase()\n\t);\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps !== undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i] === undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from \"../constants\";\nimport { applyRef } from \"../util\";\nimport options from \"../options\";\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg\n\t\t? document.createElementNS(\"http://www.w3.org/2000/svg\", nodeName)\n\t\t: document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name === \"className\") name = \"class\";\n\n\tif (name === \"key\") {\n\t\t// ignore\n\t} else if (name === \"ref\") {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t} else if (name === \"class\" && !isSvg) {\n\t\tnode.className = value || \"\";\n\t} else if (name === \"style\") {\n\t\tif (!value || typeof value === \"string\" || typeof old === \"string\") {\n\t\t\tnode.style.cssText = value || \"\";\n\t\t}\n\t\tif (value && typeof value === \"object\") {\n\t\t\tif (typeof old !== \"string\") {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = \"\";\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] =\n\t\t\t\t\ttypeof value[i] === \"number\" && IS_NON_DIMENSIONAL.test(i) === false\n\t\t\t\t\t\t? value[i] + \"px\"\n\t\t\t\t\t\t: value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === \"dangerouslySetInnerHTML\") {\n\t\tif (value) node.innerHTML = value.__html || \"\";\n\t} else if (name[0] == \"o\" && name[1] == \"n\") {\n\t\tlet useCapture = name !== (name = name.replace(/Capture$/, \"\"));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== \"list\" && name !== \"type\" && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value == null ? \"\" : value;\n\t\t} catch (e) {}\n\t\tif ((value == null || value === false) && name != \"spellcheck\")\n\t\t\tnode.removeAttribute(name);\n\t} else {\n\t\tlet ns = isSvg && name !== (name = name.replace(/^xlink:?/, \"\"));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value == null || value === false) {\n\t\t\tif (ns)\n\t\t\t\tnode.removeAttributeNS(\n\t\t\t\t\t\"http://www.w3.org/1999/xlink\",\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\telse node.removeAttribute(name);\n\t\t} else if (typeof value === \"string\") {\n\t\t\tif (ns) {\n\t\t\t\tnode.setAttributeNS(\n\t\t\t\t\t\"http://www.w3.org/1999/xlink\",\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(name, value);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type]((options.event && options.event(e)) || e);\n}\n","import { ATTR_KEY } from \"../constants\";\nimport { isSameNodeType, isNamedNode } from \"./index\";\nimport { createNode, setAccessor } from \"../dom/index\";\nimport { npn } from \"../util\";\nimport { removeNode } from \"../dom/index\";\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom != null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t}\n\n\treturn ret;\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode == null || typeof vnode === \"boolean\") vnode = \"\";\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode === \"string\" || typeof vnode === \"number\") {\n\t\t// update if it's already a Text node:\n\t\tif (\n\t\t\tdom &&\n\t\t\tdom.splitText !== undefined &&\n\t\t\tdom.parentNode &&\n\t\t\t(!dom._component || componentRoot)\n\t\t) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode =\n\t\tvnodeName === \"svg\"\n\t\t\t? true\n\t\t\t: vnodeName === \"foreignObject\"\n\t\t\t\t? false\n\t\t\t\t: isSvgMode;\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a = out.attributes, i = a.length; i--; )\n\t\t\tprops[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (\n\t\t!hydrating &&\n\t\tvchildren &&\n\t\tvchildren.length === 1 &&\n\t\ttypeof vchildren[0] === \"string\" &&\n\t\tfc != null &&\n\t\tfc.splitText !== undefined &&\n\t\tfc.nextSibling == null\n\t) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if ((vchildren && vchildren.length) || fc != null) {\n\t\tinnerDiffNode(\n\t\t\tout,\n\t\t\tvchildren,\n\t\t\tcontext,\n\t\t\tmountAll,\n\t\t\thydrating || props.dangerouslySetInnerHTML != null\n\t\t);\n\t}\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj,\n\t\tc,\n\t\tf,\n\t\tvchild,\n\t\tchild;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len !== 0) {\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey =\n\t\t\t\t\tvlen && props\n\t\t\t\t\t\t? child._component\n\t\t\t\t\t\t\t? child._component.__key\n\t\t\t\t\t\t\t: props.key\n\t\t\t\t\t\t: null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t} else if (\n\t\t\t\tprops ||\n\t\t\t\t(child.splitText !== undefined\n\t\t\t\t\t? isHydrating\n\t\t\t\t\t\t? child.nodeValue.trim()\n\t\t\t\t\t\t: true\n\t\t\t\t\t: isHydrating)\n\t\t\t) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min < childrenLen) {\n\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tchildren[j] !== undefined &&\n\t\t\t\t\t\tisSameNodeType((c = children[j]), vchild, isHydrating)\n\t\t\t\t\t) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed)\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined)\n\t\t\trecollectNodeTree(child, false);\n\t}\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\t// If the node's VNode had a ref function, invoke it with null here.\n\t// (this is part of the React spec, and smart for unsetting references)\n\tif (node[ATTR_KEY] != null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\tif (unmountOnly === false || node[ATTR_KEY] == null) {\n\t\tremoveNode(node);\n\t}\n\n\tremoveChildren(node);\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\tlet update = false;\n\tlet isWeElement = dom.update;\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode);\n\t\t\tif (isWeElement) {\n\t\t\t\tdelete dom.props[name];\n\t\t\t\tupdate = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\t//diable when using store system?\n\t\t//!dom.store &&\n\t\tif (isWeElement && typeof attrs[name] === \"object\") {\n\t\t\tdom.props[npn(name)] = attrs[name];\n\t\t\tupdate = true;\n\t\t} else if (\n\t\t\tname !== \"children\" &&\n\t\t\tname !== \"innerHTML\" &&\n\t\t\t(!(name in old) ||\n\t\t\t\tattrs[name] !==\n\t\t\t\t\t(name === \"value\" || name === \"checked\" ? dom[name] : old[name]))\n\t\t) {\n\t\t\tsetAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode);\n\t\t\tif (isWeElement) {\n\t\t\t\tdom.props[npn(name)] = attrs[name];\n\t\t\t\tupdate = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tdom.parentNode && update && isWeElement && dom.update();\n}\n","const ARRAYTYPE = \"[object Array]\";\nconst OBJECTTYPE = \"[object Object]\";\nconst FUNCTIONTYPE = \"[object Function]\";\n\nexport default function diff(current, pre) {\n\tconst result = {};\n\tsyncKeys(current, pre);\n\t_diff(current, pre, \"\", result);\n\treturn result;\n}\n\nfunction syncKeys(current, pre) {\n\tif (current === pre) return;\n\tconst rootCurrentType = type(current);\n\tconst rootPreType = type(pre);\n\tif (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n\t\tif (Object.keys(current).length >= Object.keys(pre).length) {\n\t\t\tfor (let key in pre) {\n\t\t\t\tconst currentValue = current[key];\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tcurrent[key] = null;\n\t\t\t\t} else {\n\t\t\t\t\tsyncKeys(currentValue, pre[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n\t\tif (current.length >= pre.length) {\n\t\t\tpre.forEach((item, index) => {\n\t\t\t\tsyncKeys(current[index], item);\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction _diff(current, pre, path, result) {\n\tif (current === pre) return;\n\tconst rootCurrentType = type(current);\n\tconst rootPreType = type(pre);\n\tif (rootCurrentType == OBJECTTYPE) {\n\t\tif (\n\t\t\trootPreType != OBJECTTYPE ||\n\t\t\tObject.keys(current).length < Object.keys(pre).length\n\t\t) {\n\t\t\tsetResult(result, path, current);\n\t\t} else {\n\t\t\tfor (let key in current) {\n\t\t\t\tconst currentValue = current[key];\n\t\t\t\tconst preValue = pre[key];\n\t\t\t\tconst currentType = type(currentValue);\n\t\t\t\tconst preType = type(preValue);\n\t\t\t\tif (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n\t\t\t\t\tif (currentValue != pre[key]) {\n\t\t\t\t\t\tsetResult(\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t(path == \"\" ? \"\" : path + \".\") + key,\n\t\t\t\t\t\t\tcurrentValue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (currentType == ARRAYTYPE) {\n\t\t\t\t\tif (preType != ARRAYTYPE) {\n\t\t\t\t\t\tsetResult(\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t(path == \"\" ? \"\" : path + \".\") + key,\n\t\t\t\t\t\t\tcurrentValue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (currentValue.length < preValue.length) {\n\t\t\t\t\t\t\tsetResult(\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t(path == \"\" ? \"\" : path + \".\") + key,\n\t\t\t\t\t\t\t\tcurrentValue\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentValue.forEach((item, index) => {\n\t\t\t\t\t\t\t\t_diff(\n\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\tpreValue[index],\n\t\t\t\t\t\t\t\t\t(path == \"\" ? \"\" : path + \".\") + key + \"[\" + index + \"]\",\n\t\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (currentType == OBJECTTYPE) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreType != OBJECTTYPE ||\n\t\t\t\t\t\tObject.keys(currentValue).length < Object.keys(preValue).length\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetResult(\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t(path == \"\" ? \"\" : path + \".\") + key,\n\t\t\t\t\t\t\tcurrentValue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let subKey in currentValue) {\n\t\t\t\t\t\t\t_diff(\n\t\t\t\t\t\t\t\tcurrentValue[subKey],\n\t\t\t\t\t\t\t\tpreValue[subKey],\n\t\t\t\t\t\t\t\t(path == \"\" ? \"\" : path + \".\") + key + \".\" + subKey,\n\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (rootCurrentType == ARRAYTYPE) {\n\t\tif (rootPreType != ARRAYTYPE) {\n\t\t\tsetResult(result, path, current);\n\t\t} else {\n\t\t\tif (current.length < pre.length) {\n\t\t\t\tsetResult(result, path, current);\n\t\t\t} else {\n\t\t\t\tcurrent.forEach((item, index) => {\n\t\t\t\t\t_diff(item, pre[index], path + \"[\" + index + \"]\", result);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} else {\n\t\tsetResult(result, path, current);\n\t}\n}\n\nfunction setResult(result, k, v) {\n\tif (type(v) != FUNCTIONTYPE) {\n\t\tresult[k] = v;\n\t}\n}\n\nfunction type(obj) {\n\treturn Object.prototype.toString.call(obj);\n}\n","import { cssToDom, nProps } from \"./util\";\nimport { diff } from \"./vdom/diff\";\n\nexport default class WeElement extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.props = nProps(this.constructor.props);\n\t\tthis.data = this.constructor.data || {};\n\t}\n\n\tconnectedCallback() {\n\t\tif (!this.constructor.pure) {\n\t\t\tlet p = this.parentNode;\n\t\t\twhile (p && !this.store) {\n\t\t\t\tthis.store = p.store;\n\t\t\t\tp = p.parentNode || p.host;\n\t\t\t}\n\t\t\tif (this.store) {\n\t\t\t\tthis.store.instances.push(this);\n\t\t\t}\n\t\t}\n\n\t\tthis.install();\n\n\t\tconst shadowRoot = this.attachShadow({ mode: \"open\" });\n\n\t\tthis.css && shadowRoot.appendChild(cssToDom(this.css()));\n\t\tthis.host = diff(\n\t\t\tnull,\n\t\t\tthis.render(\n\t\t\t\tthis.props,\n\t\t\t\t!this.constructor.pure && this.store ? this.store.data : this.data\n\t\t\t),\n\t\t\t{},\n\t\t\tfalse,\n\t\t\tnull,\n\t\t\tfalse\n\t\t);\n\t\tshadowRoot.appendChild(this.host);\n\n\t\tthis.installed();\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.uninstall();\n\t\tif (this.store) {\n\t\t\tfor (let i = 0, len = this.store.instances.length; i < len; i++) {\n\t\t\t\tif (this.store.instances[i] === this) {\n\t\t\t\t\tthis.store.instances.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis.beforeUpdate();\n\t\tdiff(\n\t\t\tthis.host,\n\t\t\tthis.render(\n\t\t\t\tthis.props,\n\t\t\t\t!this.constructor.pure && this.store ? this.store.data : this.data\n\t\t\t)\n\t\t);\n\t\tthis.afterUpdate();\n\t}\n\n\tfire(name, data) {\n\t\tthis.dispatchEvent(new CustomEvent(name, { detail: data }));\n\t}\n\n\tinstall() {}\n\n\tinstalled() {}\n\n\tuninstall() {}\n\n\tbeforeUpdate() {}\n\n\tafterUpdate() {}\n}\n","import { diff } from \"./vdom/diff\";\nimport jsonDiff from \"./json-diff\";\n\nconst list = [];\nlet tick = false;\n\nexport function render(vnode, parent, store) {\n\tparent = typeof parent === \"string\" ? document.querySelector(parent) : parent;\n\tif (store) {\n\t\tstore.instances = [];\n\t\textendStoreUpate(store);\n\t\tstore.originData = JSON.parse(JSON.stringify(store.data));\n\t}\n\tparent.store = store;\n\tdiff(null, vnode, {}, false, parent, false);\n\tlist.push(store);\n\n\tif (store && !tick) {\n\t\trequestIdleCallback(execTask);\n\t\ttick = true;\n\t}\n\n\tfunction execTask(deadline) {\n\t\twhile (deadline.timeRemaining() > 0) {\n\t\t\tlist.forEach(currentStore => {\n\t\t\t\tcurrentStore.update();\n\t\t\t});\n\t\t}\n\t\tsetTimeout(function() {\n\t\t\trequestIdleCallback(execTask);\n\t\t}, 200);\n\t}\n}\n\nfunction extendStoreUpate(store) {\n\tstore.update = function() {\n\t\tlet diffResult = jsonDiff(this.data, this.originData);\n\t\tif (Object.keys(diffResult)[0] == \"\") {\n\t\t\tdiffResult = diffResult[\"\"];\n\t\t}\n\t\tconst updateAll = matchGlobalData(this.globalData, diffResult);\n\t\tif (Object.keys(diffResult).length > 0) {\n\t\t\tthis.instances.forEach(instance => {\n\t\t\t\tif (\n\t\t\t\t\tupdateAll ||\n\t\t\t\t\tthis.updateAll ||\n\t\t\t\t\t(instance.constructor.updatePath &&\n\t\t\t\t\t\tneedUpdate(diffResult, instance.constructor.updatePath))\n\t\t\t\t) {\n\t\t\t\t\tinstance.update();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.onChange && this.onChange(diffResult);\n\t\t\tfor (let key in diffResult) {\n\t\t\t\tupdateByPath(\n\t\t\t\t\tthis.originData,\n\t\t\t\t\tkey,\n\t\t\t\t\ttypeof diffResult[key] === \"object\"\n\t\t\t\t\t\t? JSON.parse(JSON.stringify(diffResult[key]))\n\t\t\t\t\t\t: diffResult[key]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction matchGlobalData(globalData, diffResult) {\n\tif (!globalData) return false;\n\tfor (let keyA in diffResult) {\n\t\tif (globalData.indexOf(keyA) > -1) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (let i = 0, len = globalData.length; i < len; i++) {\n\t\t\tif (includePath(keyA, globalData[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n//todo path级别检测包括Array，如果array为空数组，默认值在install里加\nfunction needUpdate(diffResult, updatePath) {\n\tfor (let keyA in diffResult) {\n\t\tif (updatePath[keyA]) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (let keyB in updatePath) {\n\t\t\tif (includePath(keyA, keyB)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction includePath(pathA, pathB) {\n\tif (pathA.indexOf(pathB) === 0) {\n\t\tconst next = pathA.substr(pathB.length, 1);\n\t\tif (next === \"[\" || next === \".\") {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction updateByPath(origin, path, value) {\n\tconst arr = path\n\t\t.replace(/]/g, \"\")\n\t\t.replace(/\\[/g, \".\")\n\t\t.split(\".\");\n\tlet current = origin;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tif (i === len - 1) {\n\t\t\tcurrent[arr[i]] = value;\n\t\t} else {\n\t\t\tcurrent = current[arr[i]];\n\t\t}\n\t}\n}\n","const OBJECTTYPE = \"[object Object]\";\nconst ARRAYTYPE = \"[object Array]\";\n\nexport function define(name, ctor) {\n\tcustomElements.define(name, ctor);\n\tif (ctor.data && !ctor.pure) {\n\t\tctor.updatePath = getUpdatePath(ctor.data);\n\t}\n}\n\nexport function getUpdatePath(data) {\n\tconst result = {};\n\tdataToPath(data, result);\n\treturn result;\n}\n\nfunction dataToPath(data, result) {\n\tObject.keys(data).forEach(key => {\n\t\tresult[key] = true;\n\t\tconst type = Object.prototype.toString.call(data[key]);\n\t\tif (type === OBJECTTYPE) {\n\t\t\t_objToPath(data[key], key, result);\n\t\t} else if (type === ARRAYTYPE) {\n\t\t\t_arrayToPath(data[key], key, result);\n\t\t}\n\t});\n}\n\nfunction _objToPath(data, path, result) {\n\tObject.keys(data).forEach(key => {\n\t\tresult[path + \".\" + key] = true;\n\t\tdelete result[path];\n\t\tconst type = Object.prototype.toString.call(data[key]);\n\t\tif (type === OBJECTTYPE) {\n\t\t\t_objToPath(data[key], path + \".\" + key, result);\n\t\t} else if (type === ARRAYTYPE) {\n\t\t\t_arrayToPath(data[key], path + \".\" + key, result);\n\t\t}\n\t});\n}\n\nfunction _arrayToPath(data, path, result) {\n\tdata.forEach((item, index) => {\n\t\tresult[path + \"[\" + index + \"]\"] = true;\n\t\tdelete result[path];\n\t\tconst type = Object.prototype.toString.call(item);\n\t\tif (type === OBJECTTYPE) {\n\t\t\t_objToPath(item, path + \"[\" + index + \"]\", result);\n\t\t} else if (type === ARRAYTYPE) {\n\t\t\t_arrayToPath(item, path + \"[\" + index + \"]\", result);\n\t\t}\n\t});\n}\n","function getGlobal() {\n\tif (\n\t\ttypeof global !== \"object\" ||\n\t\t!global ||\n\t\tglobal.Math !== Math ||\n\t\tglobal.Array !== Array\n\t) {\n\t\treturn (\n\t\t\tself ||\n\t\t\twindow ||\n\t\t\tglobal ||\n\t\t\t(function() {\n\t\t\t\treturn this;\n\t\t\t})()\n\t\t);\n\t}\n\treturn global;\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n\tstore: null,\n\troot: getGlobal()\n};\n","import { define } from \"./define\";\n\nexport function tag(name, pure) {\n\treturn function(target) {\n\t\ttarget.pure = pure;\n\t\tdefine(name, target);\n\t};\n}\n","import { h, h as createElement } from \"./h\";\nimport options from \"./options\";\nimport WeElement from \"./we-element\";\nimport { render } from \"./render\";\nimport { define } from \"./define\";\nimport { tag } from \"./tag\";\n\nconst omi = {\n\ttag,\n\tWeElement,\n\trender,\n\th,\n\tcreateElement,\n\toptions,\n\tdefine\n};\n\noptions.root.Omi = omi;\noptions.root.Omi.version = \"4.0.3\";\n\nexport default omi;\n\nexport { tag, WeElement, render, h, createElement, options, define };\n"]}