{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/style.js","../src/obaa.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/define.js","../src/options.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","String","p","options","isWeb","map","value","key","vnode","extend","obj","props","cloneElement","slice","call","ATTR_KEY","component","debounceRendering","defer","rerender","items","element","base","renderComponent","list","componentChange","hydrating","_componentConstructor","node","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","o","x","trim","s","replace","Array","isArray","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","IS_NON_DIMENSIONAL","test","oldJson","currentJson","changed","ckey","result","setStyles","substring","eventProxy","useCapture","removeEventListener","_listeners","innerHTML","setProperty","removeAttribute","ns","addEventListener","setAttributeNS","setAttribute","e","this","type","event","diffLevel","c","mounts","isSvgMode","afterMount","installed","diff","dom","context","mountAll","parent","componentRoot","ret","idiff","ownerSVGElement","undefined","out","prevSvgMode","vnodeName","mapping","_component","buildComponentFromVNode","document","createTextNode","replaceChild","recollectNodeTree","t","appendChild","vchildren","innerDiffNode","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","splitText","len","min","nextSibling","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","inst","components","Ctor","render","constructor","Component","createComponent","prototype","Omi","doRender","nextBase","store","splice","window","state","getCtorName","ctor","item","styleCache","attrName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","someThingStyles","getElementById","textContent","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","_preStyle","scopedStyle","vdom","staticStyleMapping","addScopedAttrStatic","scoper","opts","_disable","setComponentProps","install","observe","data","componentWillMount","prevContext","componentWillReceiveProps","enqueueRender","prevProps","__ref","isChild","previousProps","previousState","isUpdate","initialBase","initialChildComponent","previousContext","rendered","shouldComponentUpdate","cbase","componentWillUpdate","beforeUpdate","FORCE_RENDER","staticCss","addScopedAttr","_id","childComponent","childProps","getNodeProps","toUnmount","baseParent","SYNC_RENDER","componentRef","unshift","_parentComponent","componentDidUpdate","afterUpdate","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","unmountComponent","isOwner","beforeUnmount","ref","merge","getUpdatePath","OBJECTTYPE","ARRAYTYPE","define","updatePath","Object","toString","dataToPath","keys","forEach","_objToPath","_arrayToPath","path","index","root","global","Math","self","br","hr","h1","h2","h3","h4","h5","h6","abbr","address","bdi","bdo","blockquote","cite","code","del","ins","dfn","em","strong","samp","kbd","var","mark","pre","q","ruby","rp","rt","small","sub","sup","time","u","wbr","form","input","textarea","button","select","option","optgroup","label","fieldset","datalist","legend","output","iframe","img","canvas","figure","figcaption","audio","source","video","track","nav","link","ul","ol","li","dl","dt","dd","menu","command","table","caption","th","td","tr","thead","tbody","tfoot","col","colgroup","div","main","span","header","footer","section","article","aside","details","dialog","summary","progress","meter","meta","area","script","noscript","embed","object","param","view","scroll-view","swiper","icon","text","checkbox","radio","picker","picker-view","slider","switch","navigator","image","contact-button","block","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","target","arr","callback","_observe","$observer","eventPropArr","prop","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","onPropertyChanged","propChanged","all","handler","oldValue","rootName","_getRootName","mock","methods","apply","RegExp","cprop","hasOwnProperty","isFunction","toUpperCase","get","currentValue","triggerStr","add","set","exec","getId","forceUpdate","update","instances","WeElement","version","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nconst EMPTY_CHILDREN = []\n\nconst map = {\n  br: 'view',\n  hr: 'view',\n\n  p: 'view',\n  h1: 'view',\n  h2: 'view',\n  h3: 'view',\n  h4: 'view',\n  h5: 'view',\n  h6: 'view',\n  abbr: 'view',\n  address: 'view',\n  b: 'view',\n  bdi: 'view',\n  bdo: 'view',\n  blockquote: 'view',\n  cite: 'view',\n  code: 'view',\n  del: 'view',\n  ins: 'view',\n  dfn: 'view',\n  em: 'view',\n  strong: 'view',\n  samp: 'view',\n  kbd: 'view',\n  var: 'view',\n  i: 'view',\n  mark: 'view',\n  pre: 'view',\n  q: 'view',\n  ruby: 'view',\n  rp: 'view',\n  rt: 'view',\n  s: 'view',\n  small: 'view',\n  sub: 'view',\n  sup: 'view',\n  time: 'view',\n  u: 'view',\n  wbr: 'view',\n\n  form: 'form',\n  input: 'input',\n  textarea: 'textarea',\n  button: 'button',\n  select: 'picker',\n  option: 'view',\n  optgroup: 'view',\n  label: 'label',\n  fieldset: 'view',\n  datalist: 'picker',\n  legend: 'view',\n  output: 'view',\n\n  iframe: 'view',\n\n  img: 'image',\n  canvas: 'canvas',\n  figure: 'view',\n  figcaption: 'view',\n\n  audio: 'audio',\n  source: 'audio',\n  video: 'video',\n  track: 'video',\n\n  a: 'navigator',\n  nav: 'view',\n  link: 'navigator',\n\n  ul: 'view',\n  ol: 'view',\n  li: 'view',\n  dl: 'view',\n  dt: 'view',\n  dd: 'view',\n  menu: 'view',\n  command: 'view',\n\n  table: 'view',\n  caption: 'view',\n  th: 'view',\n  td: 'view',\n  tr: 'view',\n  thead: 'view',\n  tbody: 'view',\n  tfoot: 'view',\n  col: 'view',\n  colgroup: 'view',\n\n  div: 'view',\n  main: 'view',\n  //'span': 'label',\n  span: 'text',\n  header: 'view',\n  footer: 'view',\n  section: 'view',\n  article: 'view',\n  aside: 'view',\n  details: 'view',\n  dialog: 'view',\n  summary: 'view',\n\n  progress: 'progress',\n  meter: 'progress',\n  head: 'view',\n  meta: 'view',\n  base: 'text',\n  map: 'map',\n  area: 'navigator',\n\n  script: 'view',\n  noscript: 'view',\n  embed: 'view',\n  object: 'view',\n  param: 'view',\n\n  view: 'view',\n  'scroll-view': 'scroll-view',\n  swiper: 'swiper',\n  icon: 'icon',\n  text: 'text',\n\n  checkbox: 'checkbox',\n  radio: 'radio',\n  picker: 'picker',\n  'picker-view': 'picker-view',\n  slider: 'slider',\n  switch: 'switch',\n  navigator: 'navigator',\n\n  image: 'image',\n  'contact-button': 'contact-button',\n  block: 'block'\n}\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = EMPTY_CHILDREN,\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children === EMPTY_CHILDREN) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = options.isWeb ? nodeName : map[nodeName]\n  p.attributes = attributes == null ? undefined : attributes\n  if (children && typeof children[0] === 'string' && !options.isWeb) {\n    if (p.attributes) {\n      p.attributes.value = children[0]\n    } else {\n      p.attributes = { value: children[0] }\n    }\n  } else {\n    p.children = children\n  }\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__preactattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\nexport function rerender() {\n  let p,\n    list = items\n  items = []\n  let element\n  while ((p = list.pop())) {\n    element = p.base\n    renderComponent(p)\n  }\n  if (!list.length) {\n    if (options.componentChange) options.componentChange(p, element)\n  }\n}\n","import { extend } from '../util'\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    if (old) old(null)\n    if (value) value(node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) node.addEventListener(name, eventProxy, useCapture)\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { removeNode } from '../dom/index'\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.componentDidMount) c.componentDidMount()\n    if (c.installed) c.installed()\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n\n  let ret = idiff(dom, vnode, context, mountAll, componentRoot)\n\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    out[ATTR_KEY] = true\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import { Component } from '../component'\nimport options from '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  inst.store = options.store\n  if (window && window.Omi) {\n    window.Omi.instances.push(inst)\n  }\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n  return this.constructor(props, context)\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 'static_' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttr(vdom, style, attr, component) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    style = scoper(style, attr)\n    if (style !== component._preStyle) {\n      addStyle(style, attr)\n    }\n  } else if (style !== component._preStyle) {\n    addStyleWithoutId(style)\n  }\n  component._preStyle = style\n}\n\nexport function addScopedAttrStatic(vdom, style, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom !== 'string') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport { addScopedAttr, addScopedAttrStatic, getCtorName } from '../style'\nimport obaa from '../obaa'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.componentWillMount) component.componentWillMount()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      obaa(component.data, () => {\n        component.update()\n      })\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  } else if (component.componentWillReceiveProps) {\n    component.componentWillReceiveProps(props, context)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  if (component.__ref) component.__ref(component)\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    state = component.state,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || state,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.state = previousState\n    component.context = previousContext\n    if (\n      opts !== FORCE_RENDER &&\n      component.shouldComponentUpdate &&\n      component.shouldComponentUpdate(props, state, context) === false\n    ) {\n      skip = true\n    } else if (component.componentWillUpdate) {\n      component.componentWillUpdate(props, state, context)\n    } else if (component.beforeUpdate) {\n      component.beforeUpdate(props, state, context)\n    }\n    component.props = props\n    component.state = state\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    rendered = component.render(props, state, context)\n\n    //don't rerender\n    if (component.staticCss) {\n      addScopedAttrStatic(\n        rendered,\n        component.staticCss(),\n        '_style_' + getCtorName(component.constructor)\n      )\n    }\n\n    if (component.css) {\n      addScopedAttr(\n        rendered,\n        component.css(),\n        '_style_' + component._id,\n        component\n      )\n    }\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.componentDidUpdate) {\n      component.componentDidUpdate(\n        previousProps,\n        previousState,\n        previousContext\n      )\n    }\n    if (component.afterUpdate) {\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.componentWillUnmount) component.componentWillUnmount()\n  if (component.uninstall) component.uninstall()\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  if (component.__ref) component.__ref(null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { extend } from './util'\nimport { renderComponent } from './vdom/component'\nimport { enqueueRender } from './render-queue'\nimport options from './options'\n\nlet id = 0\nfunction getId() {\n  return id++\n}\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport function Component(props, context) {\n  /** @public\n   *\t@type {object}\n   */\n  this.context = context\n\n  /** @public\n   *\t@type {object}\n   */\n  this.props = props\n\n  /** @public\n   *\t@type {object}\n   */\n  this.state = this.state || {}\n\n  this._id = getId()\n\n  this._preStyle = null\n\n  this.store = null\n}\n\nComponent.is = 'WeElement'\n\nextend(Component.prototype, {\n  /** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n   *\t@param {object} nextProps\n   *\t@param {object} nextState\n   *\t@param {object} nextContext\n   *\t@returns {Boolean} should the component re-render\n   *\t@name shouldComponentUpdate\n   *\t@function\n   */\n\n  /** Update component state by copying properties from `state` to `this.state`.\n   *\t@param {object} state\t\tA hash of state properties to update with new values\n   *\t@param {function} callback\tA function to be called once component state is updated\n   */\n  setState(state, callback) {\n    let s = this.state\n    if (!this.prevState) this.prevState = extend({}, s)\n    extend(s, typeof state === 'function' ? state(s, this.props) : state)\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    enqueueRender(this)\n  },\n\n  /** Immediately perform a synchronous re-render of the component.\n   *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n   *\t@private\n   */\n  forceUpdate(callback) {\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n  },\n\n  update(callback) {\n    this.forceUpdate(callback)\n  },\n\n  /** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n   *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n   *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n   *\t@param {object} state\t\tThe component's current state\n   *\t@param {object} context\t\tContext object (if a parent component has provided context)\n   *\t@returns VNode\n   */\n  render() {}\n})\n","import { diff } from './vdom/diff'\nimport options from './options'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, store) {\n  \n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (store && store.merge) {\n    store.merge =\n      typeof store.merge === 'string'\n        ? document.querySelector(store.merge)\n        : store.merge\n  }\n \n  options.store = store\n\n  return diff(store && store.merge, vnode, {}, false, parent, false)\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  if (ctor.is === 'WeElement') {\n    options.mapping[name] = ctor\n    if (ctor.data && !ctor.pure) {\n      ctor.updatePath = getUpdatePath(ctor.data)\n    }\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  store: null,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport { Component } from './component'\nimport { render } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\n\nconst instances = []\nconst WeElement = Component\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  instances,\n  WeElement,\n  define\n}\n\noptions.root.Omi.version = '3.0.6'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  instances,\n  WeElement,\n  define\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  instances,\n  WeElement,\n  define\n}\n"]}